# handlers/order.py
from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

router = Router()


# === –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ ===
class OrderFSM(StatesGroup):
    choosing_product = State()
    entering_quantity = State()
    confirming = State()


# === –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ===
main_menu_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ù–æ–≤—ã–π –∑–∞–∫–∞–∑")],
        [KeyboardButton(text="–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞")],
    ],
    resize_keyboard=True
)

cancel_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]
    ],
    resize_keyboard=True
)


# === –°—Ç–∞—Ä—Ç –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ ===
@router.message(F.text == "–ù–æ–≤—ã–π –∑–∞–∫–∞–∑")
async def start_order(message: Message, state: FSMContext):
    await state.set_state(OrderFSM.choosing_product)
    await message.answer(
        "–ß—Ç–æ –±—É–¥–µ–º –ø–µ—á–∞—Ç–∞—Ç—å? (–ª–∏—Å—Ç–æ–≤–∫–∏, –±—É–∫–ª–µ—Ç—ã, –±–∞–Ω–Ω–µ—Ä—ã...)\n\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ‚ùå –û—Ç–º–µ–Ω–∞",
        reply_markup=cancel_kb
    )


# === –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ ===
@router.message(OrderFSM.choosing_product, ~F.text.lower().contains("–æ—Ç–º–µ–Ω–∞"))
async def choose_product(message: Message, state: FSMContext):
    await state.update_data(product=message.text)
    await state.set_state(OrderFSM.entering_quantity)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —Ç–∏—Ä–∞–∂ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000 —à—Ç):")


# === –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ ===
@router.message(OrderFSM.entering_quantity, ~F.text.lower().contains("–æ—Ç–º–µ–Ω–∞"))
async def enter_quantity(message: Message, state: FSMContext):
    await state.update_data(quantity=message.text)
    data = await state.get_data()

    await state.set_state(OrderFSM.confirming)
    await message.answer(
        f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑:\n"
        f"üì¶ –ü—Ä–æ–¥—É–∫—Ç: {data['product']}\n"
        f"üî¢ –¢–∏—Ä–∞–∂: {data['quantity']}\n\n"
        f"–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ ¬´–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é¬ª –∏–ª–∏ ‚ùå –û—Ç–º–µ–Ω–∞"
    )


# === –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ===
@router.message(OrderFSM.confirming, F.text.lower() == "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é")
async def confirm_order(message: Message, state: FSMContext):
    data = await state.get_data()
    await message.answer(
        f"‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!\n"
        f"üì¶ {data['product']}\n"
        f"üî¢ {data['quantity']}",
        reply_markup=main_menu_kb
    )
    await state.clear()


# === –û—Ç–º–µ–Ω–∞ –Ω–∞ –ª—é–±–æ–º —à–∞–≥–µ ===
@router.message(F.text.lower().contains("–æ—Ç–º–µ–Ω–∞"))
async def cancel_order(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("‚ùå –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω", reply_markup=main_menu_kb)
